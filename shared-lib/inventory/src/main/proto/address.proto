/*******************************************************************************
 * This file is part of OpenNMS(R).
 *
 * Copyright (C) 2022 The OpenNMS Group, Inc.
 * OpenNMS(R) is Copyright (C) 1999-2022 The OpenNMS Group, Inc.
 *
 * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.
 *
 * OpenNMS(R) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * OpenNMS(R) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with OpenNMS(R).  If not, see:
 *      http://www.gnu.org/licenses/
 *
 * For more information contact:
 *     OpenNMS(R) Licensing <license@opennms.org>
 *     http://www.opennms.org/
 *     http://www.opennms.com/
 *******************************************************************************/
syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package opennms.inventory;
option java_multiple_files = true;
option java_package = "org.opennms.horizon.inventory.dto";

message AddressDTO {
  int64 id = 1;
  string address_line_1 = 2;
  optional string address_line_2 = 3;
  string city = 4;
  string state = 5;
  string postal_code = 6;
  string country = 7;
}

message AddressCreateDTO {
  string address_line_1 = 1;
  optional string address_line_2 = 2;
  string city = 3;
  string state = 4;
  string postal_code = 5;
  string country = 6;
}

message AddressUpdateDTO {
  int64 id = 1;
  optional string address_line_1 = 2;
  optional string address_line_2 = 3;
  optional string city = 4;
  optional string state = 5;
  optional string postal_code = 6;
  optional string country = 7;
}

message AddressList {
  repeated AddressDTO addresses = 1;
}

service AddressService {
  rpc getAddressById (google.protobuf.Int64Value) returns (AddressDTO);
  rpc listAddresses (google.protobuf.Empty) returns (AddressList);
  rpc createAddress (AddressCreateDTO) returns (AddressDTO);
  rpc updateAddress (AddressUpdateDTO) returns (AddressDTO);
  rpc deleteAddress (google.protobuf.Int64Value) returns (google.protobuf.BoolValue);
}
