Namespace: tilt-instance
Host: onmshs.local
HostIp: 127.0.0.1
Port: 1443
Protocol: https
TLS:
  Enabled: True
  CertificateGeneration: true
  Cert:
    Name: opennms-ui-certificate
Keycloak:
  AdminPassword: admin
  HostnamePort: 1443
  HostnameAdminUrl: https://localhost:1443/auth

OpenNMS:
  API:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  UI:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
    IngressAnnotations:
      cert-manager.io/cluster-issuer: opennms-ca
  Minion:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
    ExtraVolumes:
      - name: certificate-secrets
        secret:
          secretName: root-ca-certificate
      - name: minion-certificate-manager-secrets
        secret:
          secretName: client-root-ca-certificate
      - name: certificate
        emptyDir: {}
    ExtraMounts:
      - name: certificate-secrets
        mountPath: "/run/secrets/certificates"
        readOnly: true
      - name: minion-certificate-manager-secrets
        mountPath: "/run/secrets/mtls"
        readOnly: true
      - name: certificate
        mountPath: "/opt/karaf/certs/"
    ExtraContainers:
      - image: finalgene/openssh@sha256:5b8073b8720ddb204c48a79e68e2a9f8c470404d475640280eb5df2d6a843eca
        imagePullPolicy: "{{ .Values.OpenNMS.Minion.ImagePullPolicy }}"
        name: cert-generator
        command:
          - /bin/bash
          - -c
          - |
            openssl genrsa -out /cert/client.key.pkcs1 2048
            openssl pkcs8 -topk8 -in /cert/client.key.pkcs1 -out /cert/client.key -nocrypt
            openssl req -new -key /cert/client.key -out /cert/client.unsigned.cert -subj "/C=CA/ST=TBD/L=TBD/O=OpenNMS/CN=local-minion/OU=L:TestLocation/OU=T:opennms-prime"
            openssl x509 -req -in /cert/client.unsigned.cert -days 14 -CA /run/secrets/mtls/tls.crt -CAkey /run/secrets/mtls/tls.key -out /cert/client.signed.cert
        securityContext:
          privileged: false
          runAsUser: 10001
          runAsGroup: 10001
          fsGroup: 10001
        volumeMounts:
          - name: certificate
            mountPath: "/cert"
          - name: minion-certificate-manager-secrets
            mountPath: "/run/secrets/mtls"
    GrpcConfig:
      grpc.host: ingress-nginx-controller
      grpc.port: 443
      grpc.tls.enabled: true
      grpc.trust.cert.filepath: /run/secrets/certificates/tls.crt
      grpc.client.cert.filepath: /opt/karaf/certs/client.signed.cert
      grpc.client.private.key.filepath: /opt/karaf/certs/client.key
      grpc.override.authority: minion.onmshs.local
  MinionGateway:
    SecretName: opennms-minion-gateway-certificate
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
    IngressAnnotations:
      cert-manager.io/cluster-issuer: opennms-ca
      nginx.ingress.kubernetes.io/auth-tls-secret: default/client-root-ca-certificate
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
      nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      nginx.ingress.kubernetes.io/auth-url: "http://opennms-minion-certificate-verifier.default.svc.cluster.local:8080/certificate/debug"
      nginx.ingress.kubernetes.io/auth-response-headers: "tenant-id, location"
      nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
      nginx.ingress.kubernetes.io/server-snippet: |
        grpc_read_timeout "1200s";
        grpc_send_timeout "1200s";
        client_body_timeout "1200s";
  MinionCertificateManager:
    Enabled: true
    CaSecretName: root-ca-certificate
    MtlsSecretName: client-root-ca-certificate
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  MinionCertificateVerifier:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  Inventory:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  Notification:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  Events:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  DataChoices:
    Resources:
      Limits:
        Cpu: '0'
        Memory: '0'
      Requests:
        Cpu: '0'
        Memory: '0'
  Core:
    Resources:
      Limits:
        Cpu: '0'
        Memory: 4Gi
      Requests:
        Cpu: '0'
        Memory: 2Gi
Grafana:
  Resources:
    Limits:
      Cpu: 500m
      Memory: 1Gi
    Requests:
      Cpu: 100m
      Memory: 100Mi
Prometheus:
  Server:
    Resources:
      Limits:
        Cpu: "1"
        Memory: 512Mi
      Requests:
        Cpu: 100m
        Memory: 100Mi
  PushGateway:
    Resources:
      Limits:
        Cpu: "1"
        Memory: 512Mi
      Requests:
        Cpu: 100m
        Memory: 100Mi
Kafka:
  LocalPort: 24092
